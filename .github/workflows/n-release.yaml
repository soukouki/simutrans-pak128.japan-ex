name: n release

on:
  push:
    branches:
      - main

jobs:
  create-version-tag-and-release:
    runs-on: ubuntu-latest

    steps:
      # リポジトリをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 全ての履歴とタグを取得

      # libpng15のキャッシュをチェック
      - name: Cache libpng15
        id: cache-libpng15
        uses: actions/cache@v3
        with:
          path: ~/libpng15-install
          key: libpng15-1.5.30-${{ runner.os }}
          restore-keys: |
            libpng15-1.5.30-

      # 最新のnで始まるタグを取得(無い場合はn0とする)
      - name: Get latest version tag
        id: get_latest_tag
        run: |
          latest_tag=$(git tag --list 'n*' --sort=-v:refname | head -n 1)
          if [ -z "$latest_tag" ]; then
            echo "latest_tag=n0" >> $GITHUB_ENV
          else
            echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          fi

      # 新しいバージョンを計算
      - name: Calculate new version
        id: calculate_version
        run: |
          latest_number=${latest_tag#n}
          new_number=$((latest_number + 1))
          echo "new_tag=n$new_number" >> $GITHUB_ENV

      # 新しいタグを作成してプッシュ
      - name: Create and push new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

      # libpng15をソースからビルド（キャッシュが無い場合のみ）
      - name: Build libpng15 from source
        if: steps.cache-libpng15.outputs.cache-hit != 'true'
        run: |
          # 必要なツールをインストール
          sudo apt update
          sudo apt install -y build-essential zlib1g-dev

          # 作業ディレクトリを作成
          mkdir -p ~/build && cd ~/build

          # libpng 1.5.30をダウンロード
          wget https://download.sourceforge.net/libpng/libpng-1.5.30.tar.gz
          tar -xzf libpng-1.5.30.tar.gz
          cd libpng-1.5.30

          # ホームディレクトリ内のプレフィックスでコンパイル
          ./configure --prefix=$HOME/libpng15-install
          make -j$(nproc)
          make install

      # libpng15をシステムにインストール
      - name: Install libpng15 to system
        run: |
          # キャッシュされたファイルまたは新しくビルドしたファイルをシステムにコピー
          sudo cp -r ~/libpng15-install/lib/* /usr/local/lib/
          sudo cp -r ~/libpng15-install/include/* /usr/local/include/
          
          # システムライブラリパスにシンボリックリンクを作成
          sudo ln -sf /usr/local/lib/libpng15.so.15 /usr/lib/x86_64-linux-gnu/libpng15.so.15
          sudo ln -sf /usr/local/lib/libpng15.so /usr/lib/x86_64-linux-gnu/libpng15.so
          
          # ldcacheを更新
          sudo ldconfig
          
          # インストール確認
          ldconfig -p | grep libpng15

      # Rubyをセットアップ
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3 # Windowsユーザーも居るので、最新版の3.4ではなく、少し古いバージョンを指定しておく

      # Pak128.Japan-Ex+Addonsをビルド
      - name: Build Pak128.Japan-Ex+Addons
        run: ruby scripts/make.rb all
        env:
          VERSION: ${{ env.new_tag }}

      # Pak128.Japan-Ex+Addonsディレクトリをzipで圧縮
      - name: Zip directory
        run: |
          zip -r Pak128.Japan-Ex+Addons.zip Pak128.Japan-Ex+Addons

      # GitHub Releaseを作成
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.new_tag }}
          release_name: "Release ${{ env.new_tag }}"
          body: |
            This is an automated release for version ${{ env.new_tag }}.
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # リリースアセットをアップロード
      - name: Upload to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Pak128.Japan-Ex+Addons.zip
          asset_name: Pak128.Japan-Ex+Addons.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
